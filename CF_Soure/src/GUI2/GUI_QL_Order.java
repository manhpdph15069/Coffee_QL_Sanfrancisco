/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI2;

import BUS_IServices.IQLOrder_Service;
import BUS_Services.QLOrder_Service;
import DAL_Models.ENTITY_Area;
import DAL_Models.ENTITY_BILL;
import Utils.dateHelper;
import Utils.dialogHelper;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyEvent;
import java.io.BufferedWriter;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.Writer;
import java.net.URL;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.EventObject;
import javax.swing.BorderFactory;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Tran Van Thanh
 */
public class GUI_QL_Order extends javax.swing.JPanel {

    private IQLOrder_Service qlod;
    private NumberFormat n = new DecimalFormat("#,###");
    private DefaultTableModel modell;
    private CardLayout card;
    private int row;
    private String grop;

    /**
     * Creates new form GUI_QL_Order
     */
    public GUI_QL_Order() {
        initComponents();
        init();
    }

    private void init() {
        this.setSize(1200, 700);
        this.qlod = (IQLOrder_Service) new QLOrder_Service(this, this.btnVaoBan, lblBan, tblOrder, tblLichSu, PanLichSu, PanOrder, txtmaHD, txtMaKH, txtNameEMP, lblTime, txtTong, PanCac);
        DefaultComboBoxModel model = (DefaultComboBoxModel) cbbKhu.getModel(); //kết nối cbo với model
        this.modell = (DefaultTableModel) this.tblOrder.getModel();
        model.removeAllElements(); //xóa toàn bộ item
        this.qlod.hienTableOder(tblOrder);
        try {
            //lấy tất cả đối tượng nguoiHoc không thuộc khoaHoc từ CSDL
            //rồi thêm vào combobox
            ArrayList<ENTITY_Area> list = this.qlod.getkhu();
            for (ENTITY_Area nh : list) {
                model.addElement(nh);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        this.tblSanPham.setName("SP");
        this.tblOrder.setName("Oder");
        this.qlod.hienTableSP(this.tblSanPham);
        this.txtmaHD.setEditable(false);
        this.txtNameEMP.setEditable(false);
        this.txtTong.setEditable(false);
        this.txtTienThua.setEditable(false);
        tblSanPham.getColumnModel().getColumn(5).setCellRenderer(new GUI2.GUI_QL_Order.ClientsTableButtonRenderer());
        tblSanPham.getColumnModel().getColumn(5).setCellEditor(new GUI2.GUI_QL_Order.ClientsTableRenderer(new JCheckBox()));
        tblSanPham.setPreferredScrollableViewportSize(tblSanPham.getPreferredSize());
        tblOrder.getColumnModel().getColumn(8).setCellRenderer(new GUI2.GUI_QL_Order.ClientsTableButtonRenderer());
        tblOrder.getColumnModel().getColumn(8).setCellEditor(new GUI2.GUI_QL_Order.ClientsTableRenderer(new JCheckBox()));
        tblOrder.setPreferredScrollableViewportSize(tblOrder.getPreferredSize());
        TableColumnModel tcm = tblOrder.getColumnModel();
        TableColumn tc = tcm.getColumn(5);
        tc.setCellEditor(new GUI2.GUI_QL_Order.SpinnerEditor());
        this.card = (CardLayout) PanCac.getLayout();
        card.show(PanCac, "card4");
        this.lblNgay.setText(this.lblNgay.getText() + dateHelper.DATE_FORMATER.format(dateHelper.now()));
        tblOrder.setRowHeight(30);
        tblSanPham.setRowHeight(30);
        tblSanPham.setBorder(BorderFactory.createMatteBorder(2, 2, 2, 2, Color.RED));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pmnOder = new javax.swing.JPopupMenu();
        mnTachMon = new javax.swing.JMenuItem();
        mnHuymon = new javax.swing.JMenuItem();
        jPanel2 = new javax.swing.JPanel();
        PanCac = new javax.swing.JPanel();
        panChao = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        PanLichSu = new javax.swing.JPanel();
        lblNgay = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblLichSu = new javax.swing.JTable();
        PanOrder = new javax.swing.JPanel();
        txtmaHD = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        lblBan = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtTong = new javax.swing.JTextField();
        btnThanhToan = new javax.swing.JButton();
        btnLuuVSIn = new javax.swing.JButton();
        btnTachHD = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtTienTra = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtTienThua = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtNameEMP = new javax.swing.JTextField();
        btnguowi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrder = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        txtTienTra1 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtTienTra2 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtTienTra3 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        txtMaKH = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        cbbkm = new javax.swing.JComboBox<>();
        cbbKhu = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnVaoBan = new javax.swing.JButton();
        btnxemlichsu = new javax.swing.JButton();
        PanSanPham = new javax.swing.JPanel();
        txtTim = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();

        mnTachMon.setText("Tách món");
        mnTachMon.setToolTipText("");
        mnTachMon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnTachMonActionPerformed(evt);
            }
        });
        pmnOder.add(mnTachMon);

        mnHuymon.setText("Hủy món");
        mnHuymon.setToolTipText("");
        mnHuymon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnHuymonActionPerformed(evt);
            }
        });
        pmnOder.add(mnHuymon);

        setBackground(new java.awt.Color(0, 102, 255));

        jPanel2.setBackground(new java.awt.Color(0, 102, 255));

        PanCac.setForeground(new java.awt.Color(153, 255, 153));
        PanCac.setLayout(new java.awt.CardLayout());

        panChao.setBackground(new java.awt.Color(0, 153, 255));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/chaoOrder.gif"))); // NOI18N

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/lacdit.gif"))); // NOI18N

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/lacdit.gif"))); // NOI18N

        javax.swing.GroupLayout panChaoLayout = new javax.swing.GroupLayout(panChao);
        panChao.setLayout(panChaoLayout);
        panChaoLayout.setHorizontalGroup(
            panChaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panChaoLayout.createSequentialGroup()
                .addContainerGap(268, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addGap(265, 265, 265))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panChaoLayout.createSequentialGroup()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel15))
        );
        panChaoLayout.setVerticalGroup(
            panChaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panChaoLayout.createSequentialGroup()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panChaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING)))
        );

        PanCac.add(panChao, "card4");

        PanLichSu.setBackground(new java.awt.Color(0, 153, 204));
        PanLichSu.setBorder(javax.swing.BorderFactory.createTitledBorder("Lịch sử Order"));
        PanLichSu.setForeground(new java.awt.Color(102, 255, 102));

        lblNgay.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblNgay.setText("Lịch sử Oder ngày : ");

        tblLichSu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IDOrder", "TimeOrder", "Name NV", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblLichSu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLichSuMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblLichSu);

        javax.swing.GroupLayout PanLichSuLayout = new javax.swing.GroupLayout(PanLichSu);
        PanLichSu.setLayout(PanLichSuLayout);
        PanLichSuLayout.setHorizontalGroup(
            PanLichSuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanLichSuLayout.createSequentialGroup()
                .addGap(346, 346, 346)
                .addComponent(lblNgay)
                .addContainerGap(369, Short.MAX_VALUE))
            .addGroup(PanLichSuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        PanLichSuLayout.setVerticalGroup(
            PanLichSuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanLichSuLayout.createSequentialGroup()
                .addComponent(lblNgay)
                .addGap(24, 24, 24)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE)
                .addContainerGap())
        );

        PanCac.add(PanLichSu, "card2");

        PanOrder.setBackground(new java.awt.Color(0, 102, 204));
        PanOrder.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh Sách Order"));
        PanOrder.setForeground(new java.awt.Color(153, 255, 51));

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Mã HĐ");

        lblBan.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblBan.setForeground(new java.awt.Color(0, 153, 0));
        lblBan.setText("00");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Bàn");

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 51, 51));
        jLabel7.setText("Tổng tiền");

        txtTong.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        btnThanhToan.setBackground(new java.awt.Color(51, 153, 0));
        btnThanhToan.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnThanhToan.setForeground(new java.awt.Color(0, 0, 0));
        btnThanhToan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/Cash-register-icon.png"))); // NOI18N
        btnThanhToan.setText("Thanh Toán");
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        btnLuuVSIn.setBackground(new java.awt.Color(255, 204, 51));
        btnLuuVSIn.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnLuuVSIn.setForeground(new java.awt.Color(0, 0, 0));
        btnLuuVSIn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/luuhoadon.png"))); // NOI18N
        btnLuuVSIn.setText("Lưu và In HĐ");
        btnLuuVSIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuVSInActionPerformed(evt);
            }
        });

        btnTachHD.setBackground(new java.awt.Color(255, 102, 51));
        btnTachHD.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnTachHD.setForeground(new java.awt.Color(0, 0, 0));
        btnTachHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/tachHD.png"))); // NOI18N
        btnTachHD.setText("Tách HĐ");
        btnTachHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTachHDActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 51));
        jLabel4.setText("Tiền khách trả");

        txtTienTra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTienTraKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTienTraKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 51, 51));
        jLabel8.setText("Tiền thừa");

        jButton1.setBackground(new java.awt.Color(204, 0, 0));
        jButton1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/Button-Close-icon.png"))); // NOI18N
        jButton1.setText("Hủy HĐ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Time Order");

        lblTime.setForeground(new java.awt.Color(51, 255, 0));
        lblTime.setText("12:12 PM");

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("Nhân viên Order :");

        btnguowi.setBackground(new java.awt.Color(255, 102, 51));
        btnguowi.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnguowi.setForeground(new java.awt.Color(0, 0, 0));
        btnguowi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/order-icon.png"))); // NOI18N
        btnguowi.setText("Gửi Order");
        btnguowi.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnguowi.setDefaultCapable(false);
        btnguowi.setFocusable(false);
        btnguowi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnguowiActionPerformed(evt);
            }
        });

        tblOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, "", null, null, null, null,  new Boolean(false)},
                {null, null, null, null, "", null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "IDOrder", "IDSP", "Tên SP", "Size", "Giá", "SL", "Ghi Chú", "Hủy", "Bỏ", "Khác"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblOrder.setRowHeight(25);
        tblOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblOrderMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblOrderMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblOrder);

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 51, 51));
        jLabel11.setText("Chiết Khấu");

        txtTienTra1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTienTra1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTienTra1KeyTyped(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 0, 51));
        jLabel14.setText("Thành tiền");

        txtTienTra2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTienTra2KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTienTra2KeyTyped(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 51, 51));
        jLabel17.setText("%");

        txtTienTra3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTienTra3KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTienTra3KeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Chương trình khuyến mãi");

        jLabel18.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 0, 0));
        jLabel18.setText("Mã KH");

        jLabel19.setText("Chương trình :");

        cbbkm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jLabel6))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbbkm, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel18)
                .addGap(18, 18, 18)
                .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(cbbkm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 169, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addGap(41, 41, 41))
        );

        javax.swing.GroupLayout PanOrderLayout = new javax.swing.GroupLayout(PanOrder);
        PanOrder.setLayout(PanOrderLayout);
        PanOrderLayout.setHorizontalGroup(
            PanOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanOrderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanOrderLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 882, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(PanOrderLayout.createSequentialGroup()
                        .addGroup(PanOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(PanOrderLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(lblBan)
                                .addGap(36, 36, 36)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtmaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PanOrderLayout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(PanOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanOrderLayout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNameEMP, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblTime)
                                .addGap(185, 185, 185))
                            .addGroup(PanOrderLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(PanOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PanOrderLayout.createSequentialGroup()
                                        .addGroup(PanOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnguowi, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(PanOrderLayout.createSequentialGroup()
                                                .addGap(1, 1, 1)
                                                .addGroup(PanOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel7)
                                                    .addComponent(jLabel11)
                                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(PanOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnLuuVSIn, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnTachHD, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(PanOrderLayout.createSequentialGroup()
                                        .addComponent(jLabel14)
                                        .addGap(50, 50, 50)
                                        .addGroup(PanOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtTienTra1)
                                            .addGroup(PanOrderLayout.createSequentialGroup()
                                                .addComponent(txtTienTra, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel17)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtTienTra3))
                                            .addComponent(txtTong, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel8)
                                    .addGroup(PanOrderLayout.createSequentialGroup()
                                        .addGap(141, 141, 141)
                                        .addGroup(PanOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtTienTra2, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                                            .addComponent(txtTienThua))))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        PanOrderLayout.setVerticalGroup(
            PanOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanOrderLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(PanOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lblBan)
                    .addComponent(jLabel5)
                    .addComponent(txtmaHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(lblTime)
                    .addComponent(txtNameEMP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanOrderLayout.createSequentialGroup()
                        .addGroup(PanOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtTong, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(PanOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanOrderLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel14))
                            .addGroup(PanOrderLayout.createSequentialGroup()
                                .addGroup(PanOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtTienTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel17)
                                    .addComponent(txtTienTra3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTienTra1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PanOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanOrderLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8))
                            .addGroup(PanOrderLayout.createSequentialGroup()
                                .addComponent(txtTienTra2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTienThua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(PanOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanOrderLayout.createSequentialGroup()
                                .addGroup(PanOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnLuuVSIn, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(PanOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnguowi, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnTachHD, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(PanOrderLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 6, Short.MAX_VALUE)))
                .addGap(13, 13, 13))
        );

        PanCac.add(PanOrder, "card3");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanCac, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanCac, javax.swing.GroupLayout.PREFERRED_SIZE, 614, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cbbKhu.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        cbbKhu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbbKhu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbKhuActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("Khu vực");

        jLabel1.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/chaomungfran.png"))); // NOI18N

        btnVaoBan.setBackground(new java.awt.Color(0, 255, 0));
        btnVaoBan.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnVaoBan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/vaoban.png"))); // NOI18N
        btnVaoBan.setText("Vào bàn");
        btnVaoBan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVaoBanActionPerformed(evt);
            }
        });

        btnxemlichsu.setBackground(new java.awt.Color(255, 102, 51));
        btnxemlichsu.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnxemlichsu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/lichsu.png"))); // NOI18N
        btnxemlichsu.setText("lịch sử Order");
        btnxemlichsu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxemlichsuActionPerformed(evt);
            }
        });

        PanSanPham.setBackground(new java.awt.Color(51, 153, 255));
        PanSanPham.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh Sách sản phẩm"));

        txtTim.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTimKeyTyped(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/Zoom-icon.png"))); // NOI18N
        jLabel9.setText("Tìm Kiếm");

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tblSanPham);

        javax.swing.GroupLayout PanSanPhamLayout = new javax.swing.GroupLayout(PanSanPham);
        PanSanPham.setLayout(PanSanPhamLayout);
        PanSanPhamLayout.setHorizontalGroup(
            PanSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanSanPhamLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(PanSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 872, Short.MAX_VALUE)
                    .addGroup(PanSanPhamLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTim)))
                .addContainerGap())
        );
        PanSanPhamLayout.setVerticalGroup(
            PanSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanSanPhamLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(PanSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cbbKhu, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnxemlichsu, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnVaoBan, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 231, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(PanSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbbKhu, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnxemlichsu, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnVaoBan, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(PanSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtTimKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKeyTyped
        // TODO add your handling code here:
        qlod.timSP(txtTim, tblSanPham);
    }//GEN-LAST:event_txtTimKeyTyped
    private void goiTaoBan(ENTITY_Area khu) {
        this.qlod.taoTable(this, khu.getIDArea(), this.btnVaoBan, lblBan, tblOrder, tblLichSu, PanLichSu, PanOrder, txtmaHD, txtMaKH, txtNameEMP, lblTime, txtTong, PanCac);
    }
    private void tblLichSuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLichSuMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            txtmaHD.setText(tblLichSu.getValueAt(tblLichSu.getSelectedRow(), 0).toString());
            qlod.billTable(txtmaHD, txtNameEMP, txtMaKH, lblTime, tblOrder, lblBan.getText());
            CardLayout card = (CardLayout) PanCac.getLayout();
            card.show(PanCac, "card3");
        }
    }//GEN-LAST:event_tblLichSuMouseClicked

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        // TODO add your handling code here:        
        qlod.xoaNhom(lblBan.getToolTipText());
        qlod.thanhToan(txtmaHD);
        qlod.updatebnThanhToan(txtmaHD);
        ENTITY_Area khu = (ENTITY_Area) cbbKhu.getSelectedItem();
        goiTaoBan(khu);
        card.show(PanCac, "card4");
    }//GEN-LAST:event_btnThanhToanActionPerformed

    private void btnLuuVSInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuVSInActionPerformed
        XuatTxt();
    }//GEN-LAST:event_btnLuuVSInActionPerformed

    public void XuatTxt() throws NumberFormatException {
        // TODO add your handling code here:        
        try {
            try (Writer b = new BufferedWriter(new OutputStreamWriter(new FileOutputStream("History//" + txtmaHD.getText().trim() + ".txt"), "UTF8"))) {
                b.write("\t\t\t\t\t\tSanfrancisco Coffee\r\n\r\n");
                b.write("\t\t\t\tĐịa chỉ: Tổ 4, P.Cự Khối, Q.Long Biên, Hà Nội\r\n");
                b.write("\t\t\t\tSĐT: 091 323 40 38\r\n");
                b.write("\t\t\t\tMã hóa đơn :" + txtmaHD.getText() + "\r\n");
                b.write("\t\t\t\tThời gian: " + lblTime.getText().trim() + " " + dateHelper.DATE_FORMATER.format(dateHelper.now()) + "\r\n");
                b.write("\t\t\t\tNhân viên :" + txtNameEMP.getText() + "\r\n");
                b.write("\t-------------------------------------------------------------------------------\r\n");
                b.write("\tMã SP\tTên sản phẩm\t\t\tSize\tGiá tiền (VNĐ)\t\t\t SL\t \r\n");
                b.write("\t-------------------------------------------------------------------------------\r\n");
                int line = tblOrder.getRowCount();
                int tongSl = 0;
                for (int i = 0; i < line; i++) {
                    if (tblOrder.getValueAt(i, 0).toString().equals(txtmaHD.getText())) {
                        if (tblOrder.getValueAt(i, 7).toString().equals("")) {
                            String n1 = tblOrder.getValueAt(i, 1).toString();//IDSP
                            String n2 = tblOrder.getValueAt(i, 2).toString();//Tên SP
                            String n3 = tblOrder.getValueAt(i, 3) == null ? "Ly" : tblOrder.getValueAt(i, 3).toString();//Size
                            double n4 = Double.parseDouble(tblOrder.getValueAt(i, 4).toString());//Giá
                            int n5 = Integer.valueOf(tblOrder.getValueAt(i, 5).toString());//SL
                            tongSl += n5;
                            //                    String n6 = (String) tblOrder.getValueAt(i, 7);
                            b.write("\t" + n1 + "\t" + n2 + "\t\t\t\t" + n3 + "\t\t" + n4 + "\t\t\t\t\t" + n5 + "\t" + "\r\n");
                        }
                    }
                }
                b.write("\t-------------------------------------------------------------------------------\r\n");
                String tt = txtTienTra.getText().substring(0, txtTienTra.getText().lastIndexOf("VNĐ"));
                double x = Double.parseDouble(tt);
                b.write("\t-----------------------------------------------------------------\r\n");
                b.write("\tTổng cộng:  " + tongSl + "\t\t\t" + n.format(Total()) + "VNĐ\r\n");
                b.write("\t-----------------------------------------------------------------\r\n");
                b.write("\tTiền khách đưa:\t\t\t" + n.format(x) + "VNĐ\r\n");
                b.write("\tTiền trả lại:\t\t\t" + n.format(Double.parseDouble(txtTienThua.getText().substring(0, txtTienThua.getText().lastIndexOf("VNĐ")))) + "VNĐ\r\n");
                b.write("\t-----------------------------------------------------------------\r\n");
                b.write("\tMật khẩu Wifi: Mua 2 ly tà tư rồi cho\r\n");
                b.write("\t-----------------------CẢM ƠN QUÝ KHÁCH--------------------------\r\n");
            }
        } catch (HeadlessException | IOException e) {
            e.printStackTrace();
        }
        String hd = "\t\t\t\t\t\tSanfrancisco Coffee\r\n\r\n\""
                + "\t\t\t\tĐịa chỉ: Tổ 4, P.Cự Khối, Q.Long Biên, Hà Nội\r\n"
                + "\t\t\t\tSĐT: 091 323 40 38\r\n"
                + "\t\t\t\tMã hóa đơn :" + txtmaHD.getText() + "\r\n"
                + "\t\t\t\tThời gian: " + lblTime.getText().trim() + " " + dateHelper.DATE_FORMATER.format(dateHelper.now()) + "\r\n"
                + "\t\t\t\tNhân viên :" + txtNameEMP.getText() + "\r\n"
                + "\t-------------------------------------------------------------------------------\r\n"
                + "\tMã SP\tTên sản phẩm\t\t\tSize\tGiá tiền (VNĐ)\t\t\t SL\t \r\n"
                + "\t-------------------------------------------------------------------------------\r\n";
        int line = tblOrder.getRowCount();
        int tongSl = 0;
        for (int i = 0; i < line; i++) {
            if (tblOrder.getValueAt(i, 0).toString().equals(txtmaHD.getText())) {
                if (tblOrder.getValueAt(i, 7).toString().equals("")) {
                    String n1 = tblOrder.getValueAt(i, 1).toString();//IDSP
                    String n2 = tblOrder.getValueAt(i, 2).toString();//Tên SP
                    String n3 = tblOrder.getValueAt(i, 3) == null ? "Ly" : tblOrder.getValueAt(i, 3).toString();//Size
                    double n4 = Double.parseDouble(tblOrder.getValueAt(i, 4).toString());//Giá
                    int n5 = Integer.valueOf(tblOrder.getValueAt(i, 5).toString());//SL
                    tongSl += n5;
                    //                    String n6 = (String) tblOrder.getValueAt(i, 7);
                    hd = hd + "\t" + n1 + "\t" + n2 + "\t\t\t" + n3 + "\t" + n4 + "\t\t\t" + n5 + "\t" + "\r\n";
                }
            }
        }
        String tt = txtTienTra.getText().substring(0, txtTienTra.getText().lastIndexOf("VNĐ"));
        double x = Double.parseDouble(tt);
        hd = hd + "\t-----------------------------------------------------------------\r\n"
                + "\tTổng cộng:  " + tongSl + "\t\t\t" + n.format(Total()) + "VNĐ\r\n"
                + "\t-----------------------------------------------------------------\r\n"
                + "\tTiền khách đưa:\t\t\t" + n.format(x) + "VNĐ\r\n"
                + "\tTiền trả lại:\t\t\t" + n.format(Double.parseDouble(txtTienThua.getText().substring(0, txtTienThua.getText().lastIndexOf("VNĐ")))) + "VNĐ\r\n"
                + "\t-----------------------------------------------------------------\r\n"
                + "\tMật khẩu Wifi: Mua 2 ly tà tư rồi cho\r\n"
                + "\t-----------------------CẢM ƠN QUÝ KHÁCH--------------------------\r\n";
        GUI2.GUI_QL_BILL bill = new GUI2.GUI_QL_BILL(null, true, hd);
        bill.setVisible(true);
        //Mở file txt
        Runtime runtime = Runtime.getRuntime();
        try {
            runtime.exec("notepad History//" + txtmaHD.getText().trim() + ".txt");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void txtTienTraKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTienTraKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyChar() == '\n') {
            Total();
            double tra = Double.parseDouble(txtTienTra.getText());
            double tong = Total();
            txtTienTra.setText(tra + "VNĐ");
            txtTienThua.setText(tra - tong + "VNĐ");
        }
    }//GEN-LAST:event_txtTienTraKeyPressed

    private void txtTienTraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTienTraKeyTyped
        // TODO add your handling code here:
        Total();
    }//GEN-LAST:event_txtTienTraKeyTyped

    private void btnguowiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnguowiActionPerformed
        // TODO add your handling code here:
        int e = 0;
        for (int i = 0; i < qlod.dongC(); i++) {
            ENTITY_BILL bill = new ENTITY_BILL();
            bill.setIDOrder(this.txtmaHD.getText());
            bill.setIDProduct(this.tblOrder.getValueAt(i, 1).toString());
            bill.setNote(this.tblOrder.getValueAt(i, 6).toString());
            bill.setQuantity(Integer.valueOf(this.tblOrder.getValueAt(i, 5).toString()));
            qlod.updateOderDe(bill);
        }
        for (int i = qlod.dongC(); i < this.modell.getRowCount(); i++) {
            ENTITY_BILL bill = new ENTITY_BILL();
            bill.setIDOrder(this.txtmaHD.getText());
            bill.setIDProduct(this.tblOrder.getValueAt(i, 1).toString());
            bill.setIDTable(this.lblBan.getText());
            bill.setNote(this.tblOrder.getValueAt(i, 6).toString());
            bill.setQuantity(Integer.valueOf(this.tblOrder.getValueAt(i, 5).toString()));
            bill.setReason("");
            bill.setStatus(false);
            qlod.insertOderDe(bill);
            e++;
        }
        if (e > 0) {
            qlod.updatebnGuoi();
            dialogHelper.alert(PanCac, "gưởi thành công");
        }
        card.show(PanCac, "card4");
        ENTITY_Area khu = (ENTITY_Area) cbbKhu.getSelectedItem();
        goiTaoBan(khu);
    }//GEN-LAST:event_btnguowiActionPerformed

    private void cbbKhuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbKhuActionPerformed
        // TODO add your handling code here:
        this.btnVaoBan.setEnabled(false);
        ENTITY_Area ar = (ENTITY_Area) this.cbbKhu.getSelectedItem();
        if (ar != null) {
            goiTaoBan(ar);
        }
    }//GEN-LAST:event_cbbKhuActionPerformed

    private void btnVaoBanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVaoBanActionPerformed
        // TODO add your handling code here:
        qlod.taoHD(txtmaHD);
        this.btnVaoBan.setEnabled(false);
        this.PanOrder.setVisible(true);
        this.PanLichSu.setVisible(false);
        qlod.insertOr(txtmaHD);
    }//GEN-LAST:event_btnVaoBanActionPerformed

    private void btnxemlichsuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxemlichsuActionPerformed
        // TODO add your handling code here:
        CardLayout card = (CardLayout) PanCac.getLayout();
        card.show(PanCac, "card2");
        qlod.lichsuOrder(PanLichSu, tblLichSu);
    }//GEN-LAST:event_btnxemlichsuActionPerformed

    private void mnHuymonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnHuymonActionPerformed
        // TODO add your handling code here:
        String sl = dialogHelper.prompt(null, "Mày lại Order nhầm đúng không ?\nGhi lý do vào đây :)");
        qlod.huyMon(txtmaHD, sl, tblOrder.getValueAt(this.row, 1).toString(), tblOrder.getValueAt(this.row, 6).toString());
        qlod.billTable(txtmaHD, txtNameEMP, txtMaKH, lblTime, tblOrder, lblBan.getText());
    }//GEN-LAST:event_mnHuymonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ENTITY_Area khu = (ENTITY_Area) cbbKhu.getSelectedItem();
        JDialogHuyDon dl = new JDialogHuyDon(null, true, this, btnVaoBan, lblBan, tblOrder, tblLichSu, PanSanPham, PanOrder, txtmaHD, txtMaKH, txtNameEMP, lblTime, txtTong, PanCac, khu.getIDArea());
        dl.setVisible(true);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void mnTachMonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnTachMonActionPerformed
        // TODO add your handling code here:
        String slTach = dialogHelper.prompt(this, "Nhập số lượng muốn tách ra đi cu :)");
        int slTc = Integer.valueOf(slTach);
        int slcu = Integer.valueOf(this.tblOrder.getValueAt(row, 5).toString());
        if (slcu - slTc <= 0) {
            dialogHelper.alert(this, "Có mỗi " + slcu + " Mà đòi tách ra " + slTach + " à :)");
            return;
        }
        ENTITY_BILL bill = new ENTITY_BILL();//Cập nhập món cũ
        bill.setIDOrder(this.txtmaHD.getText());
        bill.setIDProduct(this.tblOrder.getValueAt(row, 1).toString());
        bill.setNote(this.tblOrder.getValueAt(row, 6).toString());
        bill.setQuantity(slTc);
        bill.setReason("");
        bill.setStatus(false);
        qlod.updateOderDe(bill);
        ENTITY_BILL bill1 = new ENTITY_BILL();
        bill1.setIDOrder(this.txtmaHD.getText());
        bill1.setIDProduct(this.tblOrder.getValueAt(row, 1).toString());
        bill1.setNote(this.tblOrder.getValueAt(row, 6).toString() + "T " + (slcu - slTc));
        bill1.setQuantity(Integer.valueOf(slcu - slTc));
        bill1.setReason("");
        bill1.setIDTable(lblBan.getText());
        bill1.setStatus(false);
        bill.setIDTable(lblBan.getText());
        qlod.insertOderDe(bill1);
        qlod.billTable(txtmaHD, txtNameEMP, txtMaKH, lblTime, tblOrder, lblBan.getText());
    }//GEN-LAST:event_mnTachMonActionPerformed

    private void btnTachHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTachHDActionPerformed
        // TODO add your handling code here:
        int a = 0;
        JTextField txt = new JTextField();
        this.qlod.taoHD(txt);
        this.qlod.insertOr(txt);
        for (int i = 0; i < this.tblOrder.getRowCount(); i++) {
            Boolean isDelete = (Boolean) tblOrder.getValueAt(i, 9);
            if (isDelete) {
                a++;
                ENTITY_BILL bill1 = new ENTITY_BILL();
                bill1.setIDOrder(txt.getText());
                bill1.setIDProduct(this.tblOrder.getValueAt(i, 1).toString());
                bill1.setNote(this.tblOrder.getValueAt(i, 6).toString());
                bill1.setQuantity(Integer.valueOf(this.tblOrder.getValueAt(i, 5).toString()));
                bill1.setReason("");
                this.qlod.tachHDon(this.txtmaHD.getText(), txt.getText(), bill1.getIDProduct(), bill1.getNote(), lblBan.getText());
            }
        }
        this.qlod.billTable(txtmaHD, txtNameEMP, txtMaKH, lblTime, tblOrder, lblBan.getText());


    }//GEN-LAST:event_btnTachHDActionPerformed

    private void tblOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblOrderMouseClicked
        // TODO add your handling code here:
        int vitri = tblOrder.getSelectedRow();
        this.txtmaHD.setText(tblOrder.getValueAt(vitri, 0).toString());
        this.Total();
    }//GEN-LAST:event_tblOrderMouseClicked

    private void tblOrderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblOrderMouseReleased
        // TODO add your handling code here:
        int r = tblOrder.rowAtPoint(evt.getPoint());
        this.row = r;
        if (r >= 0 && r < tblOrder.getRowCount()) {
            tblOrder.setRowSelectionInterval(r, r);
        } else {
            tblOrder.clearSelection();
        }
        int rowindex = tblOrder.getSelectedRow();
        if (rowindex < 0 || rowindex >= qlod.dongC()) {
            return;
        }
        if (evt.isPopupTrigger() && evt.getComponent() instanceof JTable) {
            pmnOder.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_tblOrderMouseReleased

    private void txtTienTra1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTienTra1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTienTra1KeyPressed

    private void txtTienTra1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTienTra1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTienTra1KeyTyped

    private void txtTienTra2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTienTra2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTienTra2KeyPressed

    private void txtTienTra2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTienTra2KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTienTra2KeyTyped

    private void txtTienTra3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTienTra3KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTienTra3KeyPressed

    private void txtTienTra3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTienTra3KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTienTra3KeyTyped
    public double Total() {
        double total = 0;
        int line = this.tblOrder.getRowCount();
        for (int i = 0; i < line; i++) {
            if (this.tblOrder.getValueAt(i, 0).toString().equals(txtmaHD.getText())) {//Kiểm tra mã HĐ cùng với mã hóa đơn                 
                if (this.tblOrder.getValueAt(i, 7).toString().equals("")) {//Kiểm tra có hủy món ko
                    double gia = Double.valueOf(this.tblOrder.getValueAt(i, 4).toString());
                    int SL = Integer.valueOf(this.tblOrder.getValueAt(i, 5).toString());
                    double thanhtien = gia * SL;
                    total += thanhtien;
                }
            }
        }
        this.txtTong.setText(total + "VNĐ");
        return total;
    }

    class ClientsTableButtonRenderer extends JButton implements TableCellRenderer {

        public ClientsTableButtonRenderer() {
            setOpaque(true);
        }

        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            setForeground(Color.black);
            setBackground(UIManager.getColor("Button.background"));
//            setText((value == null) ? "" : value.toString());           
            setPreferredSize(new Dimension(40, 40));
            String s = value.toString();
            ClassLoader classLoader = this.getClass().getClassLoader();
            if (s.equals("Thêm")) {
                URL imagePath = classLoader.getResource("Icon/" + "add-cart" + ".png");
                Image imgBan = new ImageIcon(imagePath).getImage();
                Icon iconBan = new ImageIcon(imgBan.getScaledInstance(20, 20, imgBan.SCALE_SMOOTH));
                setIcon(iconBan);
            }
            if (s.equals("Xóa")) {
                URL imagePath = classLoader.getResource("Icon/" + "Button-Close-icon" + ".png");
                Image imgBan = new ImageIcon(imagePath).getImage();
                Icon iconBan = new ImageIcon(imgBan.getScaledInstance(20, 20, imgBan.SCALE_SMOOTH));
                setIcon(iconBan);
            }
            return this;
        }
    }

    public class ClientsTableRenderer extends DefaultCellEditor {

        private JButton button;
        private String label;
        private boolean clicked;
        private int row, col;
        private JTable table;

        public ClientsTableRenderer(JCheckBox checkBox) {
            super(checkBox);
            button = new JButton();
            button.setOpaque(true);
            button.addActionListener(new java.awt.event.ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    fireEditingStopped();
                }
            });
        }

        public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
            this.table = table;
            this.row = row;
            this.col = column;
            button.setForeground(Color.black);
            button.setBackground(UIManager.getColor("Button.background"));
            label = (value == null) ? "" : value.toString();
//            button.setText(label);
            clicked = true;
            String s = value.toString();
            ClassLoader classLoader = this.getClass().getClassLoader();
            if (s.equals("Thêm")) {
                URL imagePath = classLoader.getResource("Icon/" + "add-cart" + ".png");
                Image imgBan = new ImageIcon(imagePath).getImage();
                Icon iconBan = new ImageIcon(imgBan.getScaledInstance(20, 20, imgBan.SCALE_SMOOTH));
                button.setIcon(iconBan);
            }
            if (s.equals("Xóa")) {
                URL imagePath = classLoader.getResource("Icon/" + "Button-Close-icon" + ".png");
                Image imgBan = new ImageIcon(imagePath).getImage();
                Icon iconBan = new ImageIcon(imgBan.getScaledInstance(20, 20, imgBan.SCALE_SMOOTH));
                button.setIcon(iconBan);
            }
            return button;
        }

        public Object getCellEditorValue() {
            if (clicked) {
                if (table.getName().equals("SP")) {
                    if (txtmaHD.getText().equals("")) {
                        dialogHelper.alert(PanSanPham, "Bố chưa vào bàn mà đòi thêm cái gì trời ?");
                    } else {
                        Object[] row = {
                            txtmaHD.getText(),
                            tblSanPham.getValueAt(this.row, 0),
                            tblSanPham.getValueAt(this.row, 2),
                            tblSanPham.getValueAt(this.row, 3),
                            tblSanPham.getValueAt(this.row, 4),
                            1, "", "", "Xóa", false
                        };
                        modell.addRow(row);
                        Total();
                    }
                } else {
                    if (this.row >= qlod.dongC()) {
                        modell.removeRow(this.row);
                        Total();
                    }
                }
            }
            clicked = false;
            return new String(label);
        }

        public boolean stopCellEditing() {
            clicked = false;
            return super.stopCellEditing();
        }

        protected void fireEditingStopped() {
            try {
                super.fireEditingStopped();
            } catch (ArrayIndexOutOfBoundsException e) {

            }
        }
    }

    public static class SpinnerEditor extends DefaultCellEditor {

        JSpinner spinner;
        JSpinner.DefaultEditor editor;
        JTextField textField;
        boolean valueSet;

        // Initializes the spinner.
        public SpinnerEditor() {
            super(new JTextField());
            spinner = new javax.swing.JSpinner();
            spinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 200, 1));
//            spinner = new JSpinner();
            editor = ((JSpinner.DefaultEditor) spinner.getEditor());
            textField = editor.getTextField();
            textField.addFocusListener(new FocusListener() {
                public void focusGained(FocusEvent fe) {
//                    System.err.println("Got focus");
                    //textField.setSelectionStart(0);
                    //textField.setSelectionEnd(1);
                    SwingUtilities.invokeLater(new Runnable() {
                        public void run() {
                            if (valueSet) {
                                textField.setCaretPosition(1);

                            }
                        }
                    });
                }

                public void focusLost(FocusEvent fe) {
                }
            });
            textField.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent ae) {
                    stopCellEditing();
                }
            });
        }

        // Prepares the spinner component and returns it.
        public Component getTableCellEditorComponent(
                JTable table, Object value, boolean isSelected, int row, int column
        ) {
            if (!valueSet) {
                spinner.setValue(value);

            }
            SwingUtilities.invokeLater(new Runnable() {
                public void run() {
                    textField.requestFocus();
                }
            });
            return spinner;
        }

        public boolean isCellEditable(EventObject eo) {
            if (eo instanceof KeyEvent) {
                KeyEvent ke = (KeyEvent) eo;
                textField.setText(String.valueOf(ke.getKeyChar()));
//                textField.select(1,1);
//                textField.setCaretPosition(1);
//                textField.moveCaretPosition(1);
                valueSet = true;
            } else {
                valueSet = false;
            }
            return true;
        }

        // Returns the spinners current value.
        public Object getCellEditorValue() {
            return spinner.getValue();
        }

        public boolean stopCellEditing() {
//            System.err.println("Stopping edit");
            try {
                editor.commitEdit();
                spinner.commitEdit();
            } catch (java.text.ParseException e) {
                JOptionPane.showMessageDialog(null,
                        "Invalid value, discarding.");
            }
            return super.stopCellEditing();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanCac;
    private javax.swing.JPanel PanLichSu;
    private javax.swing.JPanel PanOrder;
    private javax.swing.JPanel PanSanPham;
    private javax.swing.JButton btnLuuVSIn;
    private javax.swing.JButton btnTachHD;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton btnVaoBan;
    private javax.swing.JButton btnguowi;
    private javax.swing.JButton btnxemlichsu;
    private javax.swing.JComboBox<String> cbbKhu;
    private javax.swing.JComboBox<String> cbbkm;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblBan;
    private javax.swing.JLabel lblNgay;
    private javax.swing.JLabel lblTime;
    private javax.swing.JMenuItem mnHuymon;
    private javax.swing.JMenuItem mnTachMon;
    private javax.swing.JPanel panChao;
    private javax.swing.JPopupMenu pmnOder;
    private javax.swing.JTable tblLichSu;
    private javax.swing.JTable tblOrder;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTextField txtMaKH;
    private javax.swing.JTextField txtNameEMP;
    private javax.swing.JTextField txtTienThua;
    private javax.swing.JTextField txtTienTra;
    private javax.swing.JTextField txtTienTra1;
    private javax.swing.JTextField txtTienTra2;
    private javax.swing.JTextField txtTienTra3;
    private javax.swing.JTextField txtTim;
    private javax.swing.JTextField txtTong;
    private javax.swing.JTextField txtmaHD;
    // End of variables declaration//GEN-END:variables
}

class SpinnerEditor extends DefaultCellEditor {

    private JSpinner spinner;

    public SpinnerEditor() {
        super(new JTextField());
        spinner = new javax.swing.JSpinner();
        spinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 200, 1));
//        spinner.setBorder( null );
    }

    public Component getTableCellEditorComponent(
            JTable table, Object value, boolean isSelected, int row, int column) {

        if (Integer.valueOf(value.toString()) < 0) {
            value = 0;
        }
        spinner.setValue(value);
        return spinner;
    }

    public Object getCellEditorValue() {
        return spinner.getValue();
    }
}
